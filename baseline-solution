#!/usr/bin/env python
import sys

turker_translations = [pair.strip().split('\t') for pair in open("student-data/turker_translations.tsv")]
ref_translations = [pair.strip() for pair in open("student-data/all_first_ref_trans.tsv")]

# the first value of each array contains the column names
turk_titles = turker_translations[0]
ref_titles = ref_translations[0]

# strip column names from the data
turker_translations = turker_translations[1:len(turker_translations)]
ref_translations = ref_translations[1:len(ref_translations)]

# Computes the Levenshtein distance between two strings
# http://en.wikipedia.org/wiki/Levenshtein_distance
def levenshtein_distance(s1,s2):
    if len(s1) > len(s2):
        s1,s2 = s2,s1
    distances = range(len(s1) + 1)
    for index2,char2 in enumerate(s2):
        newDistances = [index2+1]
        for index1,char1 in enumerate(s1):
            if char1 == char2:
                newDistances.append(distances[index1])
            else:
                newDistances.append(1 + min((distances[index1],
                                             distances[index1+1],
                                             newDistances[-1])))
        distances = newDistances
    return distances[-1]

for i in range(0,len(turker_translations)):
    # an array of the four turker translations
    options = turker_translations[i]
    # A string consisting of a professional translation
    reference = ref_translations[i]
    # Temp function that takes in a sentence and compares it to ref
    # *needed to use sorted with key correctly*
    def lev_temp(a):
        levenshtein_distance(reference,a)
    # Sort options based on Levenshtein distance
    sorted_trans = sorted(options, key=lev_temp)
    # Print out the sorted list
    sys.stdout.write("%s\n" % "\t".join(options))
